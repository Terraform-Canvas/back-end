# This is a basic workflow to help you get started with Actions

name: update_helm_repo

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
      OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}
      IMAGE_TAG: ${{ github.sha }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Get or create an OCIR Repository
        uses: oracle-actions/get-ocir-repository@v1.2.1
        id: get-ocir-repository
        with:
          name: terraform_canvas
          compartment: ${{ secrets.OCI_COMPARTMENT_OCID }}
      - name: Log into OCIR
        uses: oracle-actions/login-ocir@v1.2.1
        id: login-ocir
        with:
          auth_token: ${{ secrets.OCI_AUTH_TOKEN }}
      - name: Tag and push a container image
        id: tag-and-push-image
        run: |
          docker build -t "terraform_canvas:new-backend" .
          docker tag "terraform_canvas:new-backend" "${{ steps.get-ocir-repository.outputs.repo_path }}:$IMAGE_TAG"
          docker push "${{ steps.get-ocir-repository.outputs.repo_path }}:$IMAGE_TAG"
      - name: update values.yaml
        run: |
          cat <<EOF> values.yaml
          ---
          # Default values for hello-world.
          # This is a YAML-formatted file.
          # Declare variables to be passed into your templates.

          replicaCount: 2

          image:
            repository:
              frontend: iad.ocir.io/idklmfs5zwub/terraform_canvas:d3f59a7032f741bb8845d0c7e14d11ebe3959a92
              backend:  ${{ steps.get-ocir-repository.outputs.repo_path }}:$IMAGE_TAG
            pullPolicy: IfNotPresent
            # Overrides the image tag whose default is the chart appVersion.
            tag: latest

          nameOverride: ""
          fullnameOverride: ""

          serviceAccount:
            # Specifies whether a service account should be created
            create: true
            # Annotations to add to the service account
            annotations: {
            }
            # The name of the service account to use.
            # If not set and create is true, a name is generated using the fullname template
            name: ""

          frontend:
            lb:
              type: LoadBalancer
              http:
                servicePort: 80
                targetPort: 3000
            service:
              type: NodePort
              http:
                servicePort: 80
                targetPort: 3000

          backend:
            lb:
              type: LoadBalancer
              http:
                servicePort: 8000
                targetPort: 8000
            service:
              type: NodePort
              http:
                servicePort: 8000
                targetPort: 8000
          EOF
      - name: Pushes values file
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.TOKEN_GITHUB }}
        with:
          source_file: 'values.yaml'
          destination_repo: 'Terraform-Canvas/canvas-helm'
          destination_folder: 'charts/terraform-canvas'
          user_email: 'kdg97811@naver.com'
          user_name: 'Eeap'
          commit_message: "build: add img ${{ steps.get-ocir-repository.outputs.repo_path }}:$IMAGE_TAG"
